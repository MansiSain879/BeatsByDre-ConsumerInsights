# -*- coding: utf-8 -*-
"""Mansi_Beats by Dre Consumer Insights -  Capstone Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KqvxfI1jKxHs9QBlaRsD04rC8YiqRLo_

# Capstone Project: Consumer Insights Data Analytics Externship of Beats by Dre

Kindly use this template to get an overview of the structure that you need to follow in your capstone project.

Ensure that the final insights that you produce in your analysis stand out and are easily accessible.

You need to provide the code snippets that you used to run the code.

## 1. Title Page
**Project Title:** Consumer Insights Data Analytics Externship of Beats by Dre  
**Student Name:** [Mansi Sain]  
**Date:** [08/30/2024]

## 2. Table of Contents
1. Introduction
2. Data Description
3. Exploratory Data Analysis (EDA)
4. Sentiment Analysis
5. AI-Generated Insights
6. Comparative Analysis
7. Strategic Recommendations
8. Conclusion
9. References

## 3. Introduction

### 3.1 Project Overview
Briefly describe the purpose of the project and outline the key objectives.

We aim to investigate the effects of various consumer behaviors, product attributes, and demographics on product reviews and overall consumer sentiment for Beats by Dre. By analyzing different factors like product features, consumer preferences, and purchase experiences, we will develop insights to understand and predict consumer sentiment towards Beats products.

Key Analyses:
Effect of Product Attributes on Consumer Sentiment:
We will analyze the impact of different product attributes (e.g., sound quality, design, price) on consumer sentiment. This analysis will allow us to determine which features contribute positively or negatively to product reviews and consumer experiences.

Does Product Longevity Influence Reviews?
We will examine how the length of product usage influences consumer satisfaction. This analysis will reveal if users' experiences improve or deteriorate over time, providing insights into product durability and long-term satisfaction.

### 3.2 Background
Provide context about Beats by Dre and the importance of consumer sentiment analysis in the tech industry.

The primary goal of this project is to understand the factors that influence consumer sentiment towards Beats by Dre products. Consumer feedback, derived from product reviews, plays a critical role in shaping product perception and driving brand loyalty. By analyzing reviews, we aim to uncover patterns in consumer behavior, preferences, and pain points. This analysis will help identify the product attributes that most significantly contribute to customer satisfaction, such as sound quality, comfort, durability, or price, and allow us to determine which features may need improvement. Understanding these factors will enable Beats by Dre to better align product offerings with customer expectations.

## 4. Data Description

### 4.1 Data Sources
Describe the sources of your data (e.g., Amazon reviews).

In this project, we utilized the Oxylabs API to collect around 1000 reviews of various Beats by Dre speaker products from Amazon. The dataset encompasses reviews for 10-12 different products, containing key attributes that offer insights into consumer behavior, product feedback, and overall sentiment. The attributes in the dataset include:

review_id: A unique identifier for each review.
product_id: A unique identifier for each product.
title: The title of the review, often summarizing the sentiment of the review.
author: The username of the person who wrote the review.
rating: A numerical rating, typically ranging from 1 to 5 stars, reflecting the overall sentiment of the review.
content: The main body of the review, providing detailed feedback about the product.
timestamp: The date and time when the review was posted.
profile_id: A unique identifier for the reviewer's profile.
is_verified: A boolean value indicating whether the purchase was verified or not.
helpful_count: The number of times the review was marked as helpful by other users.
product_attributes: Key features of the product highlighted in the review.
This dataset provides a rich source of information to conduct exploratory data analysis (EDA) and sentiment analysis, which will help us uncover patterns in consumer behavior, product performance, and user satisfaction.

Through our analysis, we aim to extract meaningful insights that can inform Beats by Dre on how different product attributes and customer experiences influence reviews and ratings. We will explore how factors such as helpfulness of the review, verified purchases, and product attributes affect customer sentiment and product ratings.

### 4.2 Data Collection
Explain the data gathering process, including any challenges faced and how they were overcome.
"""

import pandas as pd
import numpy as np

df = pd.read_csv('/content/merged_data.csv')
df.head()

"""### 4.3 Data Cleaning
Outline the steps taken to clean and preprocess the data, highlighting any significant decisions made during this process.

Load the data below and process cleaning here.

#Let us see if the dataset contains any missing values
"""

missing_values = df.isnull().sum()
print(missing_values)

# Fill missing 'review_id', 'product_id', 'title' with a placeholder or drop the row
#df.dropna(subset=['review_id', 'product_id', 'title'], inplace=True)
# Fill missing 'author' with "Anonymous" or "Unknown"
#df['author'].fillna('Anonymous', inplace=True)
# Fill missing 'rating' with the median rating
#df['rating'].fillna(df['rating'].median(), inplace=True)
# Fill missing 'content' with "No content provided"
#df['content'].fillna('No content provided', inplace=True)
# Fill missing 'timestamp' and 'profile_id' with placeholders
#df['timestamp'].fillna('Unknown', inplace=True)
#df['profile_id'].fillna('Unknown', inplace=True)
# Fill missing 'is_verified' with 0 assuming unverified if missing
#df['is_verified'].fillna(0, inplace=True)
# Fill missing 'helpful_count' with 0
#df['helpful_count'].fillna(0, inplace=True)
# Fill missing 'product_attributes' with "Not specified"
#df['product_attributes'].fillna('Not specified', inplace=True)
# Check if there are still any missing values
#print(df.isnull().sum())

"""While cleaning the dataset, I encountered non-numeric values in the rating column, which caused issues when attempting to calculate the median rating for imputing missing values. These non-numeric values were likely due to inconsistent data entry or extraction errors.

To address this, I filtered out or converted these non-numeric ratings to NaN, allowing me to calculate the median rating from the remaining valid numeric values. This median was then used to fill any missing values in the rating column, ensuring the dataset was clean and ready for further analysis.
"""

# Checking for non-numeric values in the 'rating' column
unique_ratings = df['rating'].unique()
print("Unique values in 'rating':", unique_ratings)

# Converting non-numeric ratings to NaN
df['rating'] = pd.to_numeric(df['rating'], errors='coerce')

# Checking how many NaNs were introduced
print("Number of NaNs in 'rating' after conversion:", df['rating'].isnull().sum())

# Filling missing ratings with the median
df['rating'].fillna(df['rating'].median(), inplace=True)

#Then I proceeded with the rest of my data cleaning steps
# For instance, filling other columns with appropriate values
df.dropna(subset=['review_id', 'product_id', 'title'], inplace=True)
df['author'].fillna('Anonymous', inplace=True)
df['content'].fillna('No content provided', inplace=True)
df['timestamp'].fillna('Unknown', inplace=True)
df['profile_id'].fillna('Unknown', inplace=True)
df['is_verified'].fillna(0, inplace=True)
df['helpful_count'].fillna(0, inplace=True)
df['product_attributes'].fillna('Not specified', inplace=True)

# Checking if there are still any missing values
print(df.isnull().sum())

"""#Checking for outliers

Outliers are data points that are significantly different from the rest of the data. They can affect our analysis, so it's important to identify and handle them.

We use z-scores to find outliers in the rating column. A z-score shows how far a data point is from the average. Data points with z-scores above 3 or below -3 are considered outliers.

We calculate these z-scores, filter out the extreme values, and then remove the z-score column to clean up the data.
"""

# Calculate z-scores
from scipy import stats
df['rating_z'] = stats.zscore(df['rating'])

# Filter out outliers (e.g., z-score > 3 or < -3)
df = df[(df['rating_z'] < 3) & (df['rating_z'] > -3)]

# Drop the z-score column
df.drop(columns=['rating_z'], inplace=True)

# Create a copy of the dataframe before filtering
df['helpful_count'] = pd.to_numeric(df['helpful_count'], errors='coerce')
df['helpful_count'].fillna(df['helpful_count'].median(), inplace=True)
df_copy = df.copy()

# Calculate z-scores for 'helpful_count'
df_copy['helpful_count_z'] = stats.zscore(df_copy['helpful_count'])

# Filter out outliers
df_copy = df_copy[(df_copy['helpful_count_z'] < 3) & (df_copy['helpful_count_z'] > -3)]

# Drop the z-score column
df_copy.drop(columns=['helpful_count_z'], inplace=True)

# Update the original dataframe if needed
df = df_copy

#Checking if the outliers have been handeled
df

# Before filtering
original_shape = df.shape

# Outlier detection and filtering code
Q1 = df[['rating', 'helpful_count']].quantile(0.25)
Q3 = df[['rating', 'helpful_count']].quantile(0.75)
IQR = Q3 - Q1
df_cleaned = df[~((df[['rating', 'helpful_count']] < (Q1 - 1.5 * IQR)) | (df[['rating', 'helpful_count']] > (Q3 + 1.5 * IQR))).any(axis=1)]

# After filtering
cleaned_shape = df_cleaned.shape

print(f"Original shape: {original_shape}")
print(f"Cleaned shape: {cleaned_shape}")

import matplotlib.pyplot as plt
import seaborn as sns

# Before filtering
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
sns.boxplot(data=df[['rating', 'helpful_count']])
plt.title("Before Filtering")

# After filtering
plt.subplot(1, 2, 2)
sns.boxplot(data=df_cleaned[['rating', 'helpful_count']])
plt.title("After Filtering")

plt.show()

#Inspecting the data range
print(df[['rating', 'helpful_count']].describe())

"""#Converting categorical columns into numerical variables"""

df.dtypes

#Apart from 'rating', 'title', 'author', 'content', 'helpful_count', others are categorical columns
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

#List of categorical columns to encode
categorical_columns = ['review_id', 'product_id', 'timestamp', 'profile_id', 'product_attributes']

#Label encoding
for column in categorical_columns:
    df[column] = le.fit_transform(df[column].astype(str))
#Handling boolean column
df['is_verified'] = df['is_verified'].fillna(False)
df['is_verified'] = df['is_verified'].map({True: 1, False: 0})

#Checking the transformed dataframe
print(df.head())

# Save the cleaned dataset
df.to_csv('cleaned_combined_reviews.csv', index=False)

# Download the cleaned file
from google.colab import files
files.download('cleaned_combined_reviews.csv')

"""## 5. Exploratory Data Analysis (EDA)

### 5.1 Data Overview
Provide a summary of the dataset, including key statistics (mean, median, mode, standard deviation, etc.).

"""

from google.colab import files
uploaded = files.upload()

"""Reading first few rows

"""

df = pd.read_csv("/content/cleaned_combined_reviews (1).csv")
df.head()

"""Descriptive statistics for numerical columns"""

# Filter the dataset to include only numeric columns
numeric_df = df.select_dtypes(include=['float64', 'int64'])

# Calculate descriptive statistics
descriptive_stats = numeric_df.describe()
mean = numeric_df.mean()
median = numeric_df.median()
mode = numeric_df.mode().iloc[0]  # Taking the first mode
variance = numeric_df.var()
standard_deviation = numeric_df.std()

# Print the results
print("Descriptive Statistics:\n", descriptive_stats)
print("\nMean:\n", mean)
print("\nMedian:\n", median)
print("\nMode:\n", mode)
print("\nVariance:\n", variance)
print("\nStandard Deviation:\n", standard_deviation)

"""Handling Missing Values"""

# Fill missing values in numerical columns with median
numerical_cols = df.select_dtypes(include=['float64', 'int64']).columns
df[numerical_cols] = df[numerical_cols].fillna(df[numerical_cols].median())

# Fill missing values in categorical columns with mode
categorical_cols = df.select_dtypes(include=['object']).columns
for col in categorical_cols:
    mode = df[col].mode()[0]
    df[col].fillna(mode, inplace=True)

"""Check for duplicated rows"""

duplicates = df.duplicated().sum()
print("Number of duplicate rows:", duplicates)

#Dropping duplicates if present
df.drop_duplicates(inplace = True)

"""### 5.2 Visualizations
Include relevant visualizations (histograms, box plots, scatter plots, etc.) and explain what each visualization reveals about the data.

Plotting Histogram
"""

# Creating histograms for each numerical column
numerical_cols = df.select_dtypes(include=['float64', 'int64']).columns

for col in numerical_cols:
    plt.figure(figsize=(8, 6))
    sns.histplot(df[col], bins=30, kde=True)
    plt.title(f'Histogram of {col}')
    plt.xlabel(col)
    plt.ylabel('Frequency')
    plt.show()

"""Box-plot"""

# Plot box plots for all numerical columns
for col in numerical_cols:
    plt.figure(figsize=(6, 6))
    sns.boxplot(x=df[col])
    plt.title(f'Box Plot of {col}')
    plt.xlabel(col)
    plt.show()

"""Scatterplot

"""

# Create scatter plots for pairs of numerical columns
for i in range(len(numerical_cols)):
    for j in range(i + 1, len(numerical_cols)):
        plt.figure(figsize=(8, 6))
        sns.scatterplot(x=df[numerical_cols[i]], y=df[numerical_cols[j]])
        plt.title(f'Scatter Plot: {numerical_cols[i]} vs {numerical_cols[j]}')
        plt.xlabel(numerical_cols[i])
        plt.ylabel(numerical_cols[j])
        plt.show()

"""Heatmap"""

# Compute correlation matrix
corr_matrix = df[numerical_cols].corr()

# Plot heatmap of correlation matrix
plt.figure(figsize=(10, 8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f', linewidths=0.5)
plt.title('Heatmap of Correlation Matrix')
plt.show()

"""Interpreting the Correlation Matrix
review_id:

Correlations: 1.00 with itself, close to 0 with other variables.
Interpretation: review_id is just an identifier and has minimal to no correlation with other variables.
product_id:

Correlation with rating: -0.03 (very weak negative correlation).
Correlation with timestamp: 0.03 (very weak positive correlation).
Correlation with profile_id: 0.06 (very weak positive correlation).
Correlation with is_verified: 0.16 (weak positive correlation).
Correlation with helpful_count: -0.08 (weak negative correlation).
Interpretation: product_id has weak correlations with other variables, suggesting it doesn't strongly affect or is affected by other variables.
rating:

Correlation with product_id: -0.03 (very weak negative correlation).
Correlation with timestamp: -0.01 (very weak negative correlation).
Correlation with profile_id: 0.02 (very weak positive correlation).
Correlation with is_verified: -0.05 (very weak negative correlation).
Correlation with helpful_count: 0.07 (weak positive correlation).
Interpretation: rating shows weak relationships with other variables, with a slight positive correlation with helpful_count.
timestamp:

Correlation with product_id: 0.03 (very weak positive correlation).
Correlation with rating: -0.01 (very weak negative correlation).
Correlation with profile_id: 0.04 (very weak positive correlation).
Correlation with is_verified: -0.04 (very weak negative correlation).
Correlation with helpful_count: 0.05 (very weak positive correlation).
Interpretation: timestamp has very weak correlations with other variables, indicating it has little effect or is little affected by other variables.
profile_id:

Correlation with product_id: 0.06 (very weak positive correlation).
Correlation with rating: 0.02 (very weak positive correlation).
Correlation with timestamp: 0.04 (very weak positive correlation).
Correlation with is_verified: -0.05 (very weak negative correlation).
Correlation with helpful_count: 0.03 (very weak positive correlation).
Interpretation: profile_id shows very weak relationships with other variables.
is_verified:

Correlation with product_id: 0.16 (weak positive correlation).
Correlation with rating: -0.05 (very weak negative correlation).
Correlation with timestamp: -0.04 (very weak negative correlation).
Correlation with profile_id: -0.05 (very weak negative correlation).
Correlation with helpful_count: -0.07 (very weak negative correlation).
Interpretation: is_verified has a weak positive correlation with product_id and very weak negative correlations with other variables.
helpful_count:

Correlation with product_id: -0.08 (weak negative correlation).
Correlation with rating: 0.07 (weak positive correlation).
Correlation with timestamp: 0.05 (very weak positive correlation).
Correlation with profile_id: 0.03 (very weak positive correlation).
Correlation with is_verified: -0.07 (very weak negative correlation).
Interpretation: helpful_count has a weak positive correlation with rating and weak negative correlation with product_id and is_verified.
"""

correlation_matrix = df[numerical_cols].corr()
print(correlation_matrix)

"""Pairplot to plot scatterplot for a pair of features and visualize relationships for the whole dataset"""

sns.pairplot(df)
plt.show()

"""### 5.3 Descriptive Statistics
Discuss key findings from the descriptive statistics, highlighting any patterns, trends, or anomalies.

1. Histogram Insights
Purpose: To understand the distribution of a single variable, such as ratings or helpful_count.

a)Histogram of Ratings

Insight: “The histogram of ratings shows a concentration of reviews around the 4 and 5-star ratings, indicating high overall satisfaction among users. There are fewer reviews with lower ratings, suggesting that negative feedback is less common but still present.”

Implication: “This indicates that most consumers are pleased with the product, but there might be occasional issues that need addressing to convert lower ratings into higher ones.”

b)Histogram of Helpful Count

Insight: “The histogram of helpful counts reveals that most reviews receive a low number of helpful votes, with a few outliers receiving significantly higher counts. This suggests that while most reviews are not heavily endorsed, some reviews are perceived as particularly valuable by other users.”

Implication: “Efforts could be made to highlight or feature highly helpful reviews to better inform potential buyers and enhance the credibility of the reviews.”

2. Scatter Plot Insights

Purpose: To explore relationships between two continuous variables, such as ratings and helpful_count.

a)Scatter Plot of Rating vs. Helpful Count

Insight: “The scatter plot shows a positive correlation between ratings and helpful counts, with higher-rated reviews generally receiving more helpful votes. This suggests that reviews perceived as more positive are more likely to be considered useful by other users.”
Implication: “Encouraging users to leave detailed, positive reviews may enhance the helpfulness and visibility of the feedback, potentially influencing other customers’ perceptions.”

3. Box Plot Insights

Purpose: To understand the distribution and variability of a variable across different categories, such as ratings across different products.

a)Box Plot of Ratings by Product

Insight: “The box plot indicates that ratings vary significantly between different products. For example, Product X has a narrower interquartile range and a higher median rating compared to Product Y, which shows a wider range and more variability in ratings.”
Implication: “Product X is perceived more consistently positively compared to Product Y. The company might focus on identifying and replicating the factors contributing to Product X’s success while addressing issues in Product Y.”

b)Box Plot of Helpful Count by Product

Insight: “The box plot reveals that some products receive a much higher range of helpful votes compared to others. For instance, Product A has a higher median and more frequent outliers in helpful counts, suggesting that reviews for this product are more frequently considered valuable.”
Implication: “This suggests that Product A may have more impactful or informative reviews. Analyzing these reviews could provide insights into what aspects of the product resonate most with users.”

#Summary of Descriptive Statistics:

a)Ratings: “Most ratings are clustered around the higher end of the scale, indicating general satisfaction with the products. Variability exists, particularly among lower ratings.”

b)Helpful Count: “The majority of reviews have low helpful counts, with a few exceptional cases. The positive correlation with ratings suggests that high ratings often lead to higher helpfulness.”

c)Product Comparisons: “Different products exhibit varying levels of review ratings and helpfulness, with some products consistently performing better in terms of consumer feedback.”

These insights can help in understanding user preferences, improving product features, and refining marketing strategies based on the data analysis.

## 6. Sentiment Analysis

### 6.1 Methodology
Explain the sentiment analysis techniques used (e.g., TextBlob, NLTK) and provide code snippets.
"""

!pip install textblob

"""#Calculating sentiment polarity of each review content"""

from textblob import TextBlob

# Function to calculate sentiment polarity of each review content
def get_sentiment(text):
    analysis = TextBlob(str(text))
    return analysis.sentiment.polarity

# Apply the sentiment function to the 'content' column
df['sentiment_score'] = df['content'].apply(get_sentiment)

# Display the first few rows to see the sentiment scores
df[['content', 'sentiment_score']].head()

# Function to classify sentiment based on polarity
def classify_sentiment(score):
    if score > 0:
        return 'positive'
    elif score == 0:
        return 'neutral'
    else:
        return 'negative'

# Apply the classification function to the 'sentiment_score' column
df['sentiment'] = df['sentiment_score'].apply(classify_sentiment)

# Display the first few rows with sentiment classification
print(df[['content', 'sentiment_score', 'sentiment']].head())

# Count the number of each sentiment
sentiment_counts = df['sentiment'].value_counts()
print("Sentiment Counts:\n", sentiment_counts)

# Calculate the percentage of each sentiment
sentiment_percentage = df['sentiment'].value_counts(normalize=True) * 100
print("Sentiment Percentages:\n", sentiment_percentage)

"""#Visualizations of Sentiment Distribution"""

import matplotlib.pyplot as plt

# Plot a pie chart
plt.figure(figsize=(8, 6))
sentiment_counts.plot(kind='pie', autopct='%1.1f%%', startangle=140, colors=['#4CAF50', '#FFC107', '#F44336'])
plt.title('Sentiment Distribution')
plt.ylabel('')
plt.show()

"""Filtering Beats by Dre to provide necessary insights"""

keywords = ['HTC', 'Beats Pill', 'JBL Charge 2', 'JBL charge 3', 'JBL extreme',
             'Bose', 'JLAB', 'Beats Studio', 'Jabra', 'Sennheiser',
             'Skullcandy', 'Sony']

import numpy as np

def assign_sentiment_based_on_keywords(text, keywords):
    text = text.lower()
    for keyword in keywords:
        if keyword.lower() in text:
            analysis = TextBlob(text)
            return analysis.sentiment.polarity
    return np.nan  # Return NaN if no keywords are found

# Apply sentiment function based on keywords
df['keyword_sentiment_score'] = df['content'].apply(lambda x: assign_sentiment_based_on_keywords(x, keywords))

# Create a list to store sentiment results
keyword_sentiment_list = []

for keyword in keywords:
    keyword_reviews = df[df['content'].str.contains(keyword, case=False, na=False)]
    average_sentiment = keyword_reviews['keyword_sentiment_score'].mean()
    review_count = keyword_reviews.shape[0]
    keyword_sentiment_list.append({
        'Keyword': keyword,
        'Average Sentiment': average_sentiment,
        'Review Count': review_count
    })

# Convert list to DataFrame
keyword_sentiment_summary = pd.DataFrame(keyword_sentiment_list)
print(keyword_sentiment_summary)

import matplotlib.pyplot as plt

# Plot average sentiment scores by keyword
plt.figure(figsize=(12, 8))
plt.barh(keyword_sentiment_summary['Keyword'], keyword_sentiment_summary['Average Sentiment'], color='skyblue')
plt.xlabel('Average Sentiment Score')
plt.title('Average Sentiment Score for Each Keyword')
plt.grid(axis='x')
plt.show()

def classify_sentiment(score):
    if score > 0:
        return 'positive'
    elif score == 0:
        return 'neutral'
    else:
        return 'negative'

"""Apply Sentiment Analysis and Categorize reviews by brands"""

import pandas as pd

# Create a list to store sentiment results for each brand
brand_sentiment_list = []

for keyword in keywords:
    # Use .loc to assign values to the original DataFrame slice
    keyword_reviews = df[df['content'].str.contains(keyword, case=False, na=False)].copy()
    keyword_reviews.loc[:, 'sentiment'] = keyword_reviews['keyword_sentiment_score'].apply(classify_sentiment)

    # Count positive, neutral, and negative reviews
    positive_count = (keyword_reviews['sentiment'] == 'positive').sum()
    neutral_count = (keyword_reviews['sentiment'] == 'neutral').sum()
    negative_count = (keyword_reviews['sentiment'] == 'negative').sum()

    # Append results to the list
    brand_sentiment_list.append({
        'Brand': keyword,
        'Positive': positive_count,
        'Neutral': neutral_count,
        'Negative': negative_count
    })

# Convert list to DataFrame
brand_sentiment_summary = pd.DataFrame(brand_sentiment_list)

print(brand_sentiment_summary)

# Set the index to the Brand column for better plotting
brand_sentiment_summary.set_index('Brand', inplace=True)

# Plot sentiment breakdown
brand_sentiment_summary.plot(kind='bar', stacked=True, figsize=(14, 8), color=['green', 'gray', 'red'])
plt.title('Sentiment Breakdown by Brand')
plt.ylabel('Number of Reviews')
plt.xlabel('Brand')
plt.xticks(rotation=45)
plt.legend(title='Sentiment')
plt.show()

"""### 6.2 Results
Present the sentiment analysis results, including visualizations of sentiment distribution, and discuss the overall sentiment towards Beats by Dre products.

1)Dominant Sentiment: Positive Sentiment: The majority of reviews are positive, making up approximately 88% of the total. This suggests that most customers have a favorable opinion about the product or service.

2)Neutral Sentiment: Neutral Sentiment: Only about 7% of the reviews are neutral. This indicates that there is a relatively small proportion of reviews that do not express a strong positive or negative opinion.

3)Negative Sentiment: Negative Sentiment: A small portion of reviews (around 5%) are negative. This suggests that while most feedback is positive, there are some negative experiences reported by users.

Summary of Findings from EDA and Sentiment Analysis Exploratory Data Analysis (EDA) Findings Data Overview:

Number of Rows: The dataset contains reviews across different brands. Key Variables: Includes review_id, product_id, rating, timestamp, profile_id, is_verified, helpful_count, and product_attributes. Correlation Analysis:

Weak Correlations: The correlation analysis revealed weak relationships between most variables, indicating that individual factors like product_id and rating do not strongly influence each other across brands. Data Distribution and Relationships:

Histograms, Box Plots, and Scatter Plots: These visualizations likely show the distribution and relationships among numerical variables, but without brand-specific differentiation, they provide a general view. Sentiment Analysis Findings Sentiment Classification:

Positive Sentiments: 87.93% of reviews are positive. Neutral Sentiments: 6.84% of reviews are neutral. Negative Sentiments: 5.23% of reviews are negative.

Brand-Specific Insights:

Overall Customer Sentiment: The high percentage of positive reviews suggests that, overall, customers have favorable opinions about the products. Also after delving deeper into insights by conducting analysis after segmenting the data by brands, Beats by Dre has all positive reviews only.

## 7. AI-Generated Insights

### 7.1 Using Gemini AI
Briefly explain how Gemini AI was used to extract insights and include any relevant code snippets or explanations.
"""

import os

import google.generativeai as genai

"""## Model setup"""

# configure API Key
genai.configure(api_key="MY_API_KEY")

# Create the model
# See https://ai.google.dev/api/python/google/generativeai/GenerativeModel
generation_config = {
  "temperature": 1,
  "top_p": 0.95,
  "top_k": 64,
  "max_output_tokens": 8192,
  "response_mime_type": "text/plain",
}

model = genai.GenerativeModel(
  model_name="gemini-1.5-flash",
  generation_config=generation_config,
  # safety_settings = Adjust safety settings
  # See https://ai.google.dev/gemini-api/docs/safety-settings
)

"""## Start a chat session"""

chat_session = model.start_chat(
  history=[
    {
      "role": "user",
      "parts": [
        "You are a professional software developer with 20 years of coding experience.\n",
      ],
    }
  ]
)
response = chat_session.send_message("write a python code to sort an array in the most efficient way as possible.")

print(response.text)

"""# Module 4: Insights Through AI

Welcome to Module 4! In this module, you'll explore how to leverage Gemini AI to extract meaningful insights from your data. This module aims to introduce you to the practical applications of advanced AI models, focusing on extracting and interpreting data insights.

### Learning Objectives:
- Understand the basics of Gemini AI and its applications in data analysis.
- Learn how large language models (LLMs) like Gemini AI work.
- Utilize Gemini AI to analyze and extract insights from your dataset.
- Interpret the results provided by Gemini AI and draw meaningful conclusions.

Let's get started!

## Section 1: Introduction to Gemini AI

### **What is Gemini AI?**

[Gemini AI](https://blog.google/technology/ai/google-gemini-ai/) is an advanced language model designed to understand and generate human-like text. It can analyze large volumes of text data, summarize information, and provide insightful responses based on the input it receives.

### Key Features and Capabilities:
- **Text Analysis:** Gemini AI can process and analyze text data to identify key themes, sentiments, and insights.
- **Summarization:** It can summarize long documents, making it easier to extract important information quickly.
- **Conversational Abilities:** Gemini AI can engage in human-like conversations, providing relevant and coherent responses.

## Section 2: Setting Up Gemini AI

Now to work with Gemini directly from Python, we need to use its API.

An API, or Application Programming Interface, is like a messenger that takes requests and tells a system what you want to do. Then it returns the system's response back to you. It's a way for different software programs to talk to each other.

### Simple Example:
Think of an API as a waiter in a restaurant. You (the user) tell the waiter (API) what you want from the menu (the system). The waiter takes your order to the kitchen (the system), and then brings your food (response) back to you.

### Step-by-Step Guide to Creating and Setting Up Your Gemini AI API Key:
1. Search for "Gemini AI API" on Google.
2. Select the official Gemini AI API page on ai.google.dev.
3. Navigate to the "Get API key in Google AI Studio" section.
4. Create a new project or select an existing project to generate an API key.
5. Copy the API key and ensure not to share it publicly for security reasons.

Once you have your API key, let's start coding our system.

## Simple Chatbot Setup using Python and Gemini API
"""

import google.generativeai as genai

# Function to set up a simple chatbot
def simple_chatbot(api_key, message):
    genai.configure(api_key=api_key)

    model = genai.GenerativeModel(
        model_name="gemini-1.5-flash",
        generation_config={
            "temperature": 1,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": 8192,
            "response_mime_type": "text/plain",
        },
    )

    chat_session = model.start_chat(history=[])

    response = chat_session.send_message(message)
    return response.text

# Replace 'your_api_key' with the actual API key
api_key = "MY_API_KEY"

message = "Write a short funny story"
chatbot_response = simple_chatbot(api_key, message)
print(chatbot_response)

"""## Section 3: Integrating Gemini AI with Your Dataset

Now that you've set up the API and created a simple chatbot, let's move on to using Gemini AI with a dataset. We'll be working with a pandas DataFrame to send data to the API for analysis.
"""

import pandas as pd
import google.generativeai as genai

# Load your dataset
df = pd.read_csv('/content/cleaned_combined_reviews (1).csv')

# Replace 'your_api_key' with the actual API key
api_key = "MY_API_KEY"

# Function to analyze reviews using Gemini AI
def analyze_reviews(reviews, api_key,prompt_message):
    genai.configure(api_key=api_key)

    model = genai.GenerativeModel(
        model_name="gemini-1.5-flash",
        generation_config={
            "temperature": 1,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": 8192,
            "response_mime_type": "text/plain",
        },
    )

    chat_session = model.start_chat(history=[])

    prompt = prompt_message + "\n\n".join(reviews)
    response = chat_session.send_message(prompt)
    return response.text

# Select a subset of reviews

reviews_column_name = 'content'
reviews = df[reviews_column_name].head(100).tolist()

# Send prompts
prompt_message = "Analyze the following reviews and summarize the key insights:"
insights = analyze_reviews(reviews, api_key, prompt_message)
print(insights)

"""## Section 4: Gathering Insights

Now that you've set up Gemini AI and integrated it with your dataset, it's time to dive into gathering insights. This section will guide you through developing effective prompts, extracting key information, and interpreting the results to gain meaningful insights.

### Developing Effective Prompts

Creating the right prompts is crucial for getting useful responses from Gemini AI. Here, we'll explore how to craft prompts that help extract specific information, such as pain points and positive aspects from customer reviews.

**Extracting Pain Points:** To identify common issues or complaints in customer reviews, you can create a prompt that specifically asks Gemini AI to summarize the negative aspects.
"""

# Select a subset of reviews

reviews_column_name = 'content'
reviews = df[reviews_column_name].head(100).tolist()

# Send prompts
prompt_message = "Analyze the negative reviews and summarize the key pain points:"
insights = analyze_reviews(reviews, api_key, prompt_message)
print(insights)

"""## Section 5: Hands-On Practice

Now that you know how to use the Gemini API to gather insights, feel free to experiment as much as possible. Remember: The goal is to understand the voice of the customer through their feedback. By developing effective prompts and interpreting the AI's responses, you can uncover valuable insights that drive better decision-making.

Let us perform brand-specific analysis. Here we have done it specially for Beats brand.

### 7.2 Key Insights
Summarize the key insights generated by Gemini AI, including specific examples of prompts used and the responses received.
"""

# Function to analyze sentiment towards Beats by Dre
def analyze_brand_sentiment(reviews, api_key, brand="Beats"):
    """
    Analyze the sentiment of reviews that mention a specific brand - Beats.

    Parameters:
    - reviews (list): List of reviews to analyze.
    - api_key (str): API key for Gemini AI.
    - brand (str): The brand to focus on in the analysis.

    Returns:
    - str: Summary of sentiment towards the specified brand.
    """
    # Filtering reviews mentioning the brand
    brand_reviews = [review for review in reviews if brand.lower() in review.lower()]

    if not brand_reviews:
        return f"No reviews found mentioning {brand}."

    # Create a custom prompt message
    prompt_message = f"Analyze the sentiment of the following reviews towards {brand}:"

    # Analyze sentiment using Gemini AI
    return analyze_reviews(brand_reviews, api_key, prompt_message)

# Example Usage
brand = "Beats"
reviews = df['content'].tolist()  # Assuming 'content' contains the review text
brand_sentiment = analyze_brand_sentiment(reviews, api_key, brand)
print(brand_sentiment)

"""Code Implementation for Best Products by Sentiment"""

def rank_products_by_sentiment(reviews_df, api_key, sample_size = 10):
    """
    Analyze customer reviews to select the best products based on sentiment.

    Parameters:
    - reviews_df (DataFrame): DataFrame containing product names and reviews.
    - api_key (str): API key for Gemini AI.

    Returns:
    - dict: A dictionary ranking products by sentiment analysis.
    """
    genai.configure(api_key=api_key)

    model = genai.GenerativeModel(
        model_name="gemini-1.5-flash",
        generation_config={
            "temperature": 1,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": 8192,
            "response_mime_type": "text/plain",
        },
    )

    # Group reviews by product_id
    grouped_reviews = reviews_df.groupby('product_id')['content'].apply(list)

    product_rankings = {}

    for product_id, reviews in grouped_reviews.items():
        # Create a prompt for Gemini AI
        prompt_message = f"Analyze the customer reviews for the product with product_id '{product_id}' and evaluate its performance based on customer feedback. Provide insights and summarize how customers feel about the product."

        # Combine the reviews into a single prompt
        prompt = prompt_message + "\n\n".join(reviews)

        # Get analysis from Gemini AI
        chat_session = model.start_chat(history=[])
        response = chat_session.send_message(prompt)

        # Store the response as insights for the product
        product_rankings[product_id] = response.text

    return product_rankings

# Example usage
product_rankings = rank_products_by_sentiment(df, api_key)

# Print rankings
for product_id, insights in product_rankings.items():
    print(f"Product ID: {product_id}\nInsights: {insights}\n")

"""Emotion-detection analysis based on reviews"""

import re
import time
from google.api_core.exceptions import TooManyRequests
from sklearn.feature_extraction.text import CountVectorizer

def extract_product_names(reviews):
    """
    Extract product names from review content using keyword matching or NER.

    For demonstration, this example uses a simple keyword-based extraction.
    """
    # Example product name patterns or keywords to look for
    product_patterns = ["Beats Pill", "Bose", "Sony", "JBL", "JLab", "Skullcandy", "Sennheiser", "Beats Studio"]  # Extend this list as needed

    product_names = {}

    for review in reviews:
        for pattern in product_patterns:
            if pattern in review:
                if pattern not in product_names:
                    product_names[pattern] = []
                product_names[pattern].append(review)

    return product_names

def rank_products_by_emotion(reviews_df, api_key, sample_size=10, max_retries=3):
    """
    Analyze customer reviews to determine the predominant emotion for each product.

    Parameters:
    - reviews_df (DataFrame): DataFrame containing reviews.
    - api_key (str): API key for Gemini AI.

    Returns:
    - dict: A dictionary ranking products by predominant emotion in reviews.
    """
    genai.configure(api_key=api_key)

    model = genai.GenerativeModel(
        model_name="gemini-1.5-flash",
        generation_config={
            "temperature": 1,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": 8192,
            "response_mime_type": "text/plain",
        },
    )

    # Extract reviews and product names
    reviews_list = reviews_df['content'].tolist()
    product_names_reviews = extract_product_names(reviews_list)

    product_emotions = {}

    for product_name, reviews in product_names_reviews.items():
        prompt_message = (
            f"Analyze the customer reviews for the product '{product_name}' and determine "
            "whether the predominant emotion expressed in these reviews is joy, anger, or disappointment. "
            "Provide a summary of the emotional tone based on the reviews."
        )

        prompt = prompt_message + "\n\n".join(reviews)
        attempt = 0
        while attempt < max_retries:
            try:
                chat_session = model.start_chat(history=[])
                response = chat_session.send_message(prompt)
                product_emotions[product_name] = response.text
                break  # Exit loop if successful
            except TooManyRequests:
                attempt += 1
                wait_time = 2 ** attempt  # Exponential backoff
                print(f"Rate limit exceeded. Retrying in {wait_time} seconds...")
                time.sleep(wait_time)

    return product_emotions

# Example usage
product_emotions = rank_products_by_emotion(df, api_key)

# Print emotions
for product_name, emotion in product_emotions.items():
    print(f"Product Name: {product_name}\nPredominant Emotion: {emotion}\n")

"""### 7.3 Interpretation
Discuss how these insights can be interpreted and their relevance to Beats by Dre.

1. Sentiment Analysis Insights:

Overall Sentiment: The sentiment analysis reveals that customer reviews for Beats products are predominantly positive. This positive sentiment is driven by strong praise for sound quality, design, and ease of use. These aspects highlight Beats' success in delivering high-quality audio experiences and a user-friendly design that integrates seamlessly into the Apple ecosystem.

Key Sentiments and Emotions:

Sound Quality: Reviewers consistently commend Beats for its rich and balanced sound, particularly the bass, which is described as "punchy" and "deep." This indicates that Beats is meeting customer expectations in delivering high-performance audio.
Design: The stylish and compact design of Beats products, along with the positive mention of the unboxing experience, suggests that Beats excels in creating aesthetically pleasing and user-friendly products.
Ease of Use: The ease of pairing and connectivity, particularly within the Apple ecosystem, underscores Beats' emphasis on a smooth and convenient user experience.
Features: Positive feedback on features such as noise cancellation and transparency mode indicates that these are valuable additions to the product lineup, enhancing overall user satisfaction.
Trends Over Time: While the overall sentiment is positive, some recurring negative points have emerged, particularly related to fit, connectivity, and battery life. For example, complaints about the fit of Beats earbuds, especially the Studio Buds, suggest a need for improvement in design to better accommodate users' needs during physical activities. Issues with connectivity and battery life, notably with the Studio Buds, indicate areas where the product could be optimized to enhance reliability and performance.

2. Review Summarization:

Main Themes: The positive themes include exceptional sound quality, stylish design, and ease of use. These strengths are crucial selling points for Beats. On the other hand, recurring criticisms about fit, connectivity, and battery life highlight areas where customers feel improvements are needed.
Customer Preferences: Customers value sound quality and design, with specific products like the Beats Pill (2024) and Beats Fit Pro receiving high praise for their performance and features. However, issues such as fit and connectivity should be addressed to enhance customer satisfaction and reduce negative feedback.
3. Comparative Insights:

Competitor Positioning: Beats by Dre is positioned as a premium brand in the audio market, with a focus on high-quality sound and stylish design. This positioning is reinforced by positive reviews of sound quality and design.
Consumer Behavior: The analysis suggests that while Beats products are well-regarded overall, there are specific areas where competitors may have an edge, such as in fit and battery life. Addressing these issues could help Beats maintain its competitive advantage.
4. Practical Implications:

Product Development: To address the recurring negative feedback, Beats should consider improving the fit of its earbuds, enhancing connectivity reliability, and extending battery life. Focusing on these areas could reduce customer dissatisfaction and strengthen the brand’s market position.
Marketing Strategies: Emphasize the strengths of Beats products, such as superior sound quality and design, in marketing campaigns. Addressing known issues transparently and highlighting improvements in these areas can also build trust and customer loyalty.
5. Recommendations for Beats by Dre:

Strategic Focus: Leverage strengths in sound quality and design to differentiate Beats products in the market. Invest in improving fit, connectivity, and battery life to address customer concerns and enhance overall product performance.
Future Monitoring: Continuously monitor customer feedback and market trends to adapt and refine product offerings. Stay responsive to emerging issues and competitor advancements to maintain a competitive edge.
By interpreting these insights, Beats by Dre can better understand its market position, address areas of concern, and capitalize on its strengths to improve customer satisfaction and drive future growth.

## 8. Comparative Analysis

### 8.1 Competitor Overview
List the competitors analyzed and provide a brief overview of their market positioning.

1.Bose SoundLink Micro:


Market Positioning: Rugged and portable speaker designed for outdoor use with strong sound quality and durability at an affordable price.
Strengths: Exceptional sound quality, powerful bass, waterproof (IPX7), long battery life, durable build.
Weaknesses: Challenging Bluetooth pairing, lacks advanced features like EQ customization.

2.Beats Pill (2024):

Market Positioning: Premium portable speaker with a focus on stylish design, high sound quality, and seamless integration with Apple devices.
Strengths: Premium design, excellent sound quality, long battery life (24 hours), IP67 water and dust resistance, versatile connectivity.
Weaknesses: No dedicated app for customization.

3.JBL Charge 5:

Market Positioning: High-performance portable speaker with extended battery life, durability, and versatile features including a built-in power bank.
Strengths: High-quality sound, long battery life (20 hours), durable and waterproof, PartyBoost for multi-speaker pairing, app control.
Weaknesses: Heavy, potential connectivity issues, more expensive.

4.JBL Charge 4:

Market Positioning: Durable and reliable speaker offering strong sound quality and affordability.
Strengths: Clear, balanced sound, durable, reliable Bluetooth connectivity, aux input, more affordable than Charge 5.
Weaknesses: Slightly less powerful than Charge 5.

5.Anker PowerConf:

Market Positioning: Speakerphone designed for business use with high-quality microphone performance and long battery life.
Strengths: Excellent microphone quality, long battery life, versatile connectivity, built-in power bank, solid build.
Weaknesses: Difficult button design, limited volume control, no Windows app for firmware updates.

6.Edifier R1280T:

Market Positioning: Affordable bookshelf speaker offering good sound quality and build for home use.
Strengths: Exceptional sound quality for the price, premium build, easy setup, good value.
Weaknesses: No Bluetooth or WiFi, limited controls.

7.W-King X10:

Market Positioning: High-performance, durable speaker with powerful sound and long battery life, aimed at budget-conscious consumers.
Strengths: Powerful sound, excellent battery life, durable and waterproof, good value for the price.
Weaknesses: Heavy, less effective outdoor mode, no dedicated app, complicated firmware updates.

8.1More ComfoBuds Mini:

Market Positioning: Compact earbuds with a focus on comfort and effective noise cancellation.
Strengths: Extremely small and comfortable, good sound quality, effective ANC, good battery life.
Weaknesses: Quality control issues, limited touch controls, criticized Sound ID feature, no mono sound capability.

### 8.2 Comparison of Sentiments
Compare the sentiment analysis results of Beats by Dre with its competitors using visualizations to highlight differences and similarities.

1.Beats Pill (2024) vs. Bose SoundLink Micro:

Beats Pill (2024) is praised for its premium design, high sound quality, and long battery life, and integrates well with Apple products. It is ideal for users who value aesthetics and seamless device integration.
Bose SoundLink Micro is known for its durability, powerful bass, and portability, making it a strong choice for outdoor activities. However, it is less premium in design compared to the Beats Pill (2024) and lacks some advanced features.

2.Beats Pill (2024) vs. JBL Charge 5:

Beats Pill (2024) offers a sleek design and strong performance with excellent battery life, but lacks app control.
JBL Charge 5 provides extended battery life, versatility with features like PartyBoost and built-in power bank, but is heavier and more expensive. The JBL Charge 5 offers more functionality but may not have the same premium design as the Beats Pill (2024).

3.Beats Pill (2024) vs. JBL Charge 4:

Beats Pill (2024) excels in design and integrates well with Apple devices but lacks some advanced features and is less durable than the JBL Charge 4.
JBL Charge 4 offers similar sound quality at a more affordable price with added durability and reliability in connectivity. The Charge 4 is a solid alternative for those seeking performance at a lower cost.

4.Beats Pill (2024) vs. Anker PowerConf:

Beats Pill (2024) is more focused on high-quality audio and design for casual use, while the Anker PowerConf excels in microphone performance and is suited for business applications. The PowerConf’s lack of app control and button design issues are not a concern for Beats Pill users focused on audio quality and aesthetics.

5.Beats Pill (2024) vs. Edifier R1280T:

Beats Pill (2024) offers portability and high performance in a compact form, while Edifier R1280T provides excellent sound quality at home with a premium build but lacks wireless connectivity. The R1280T is more affordable but not suitable for on-the-go use.

6.Beats Pill (2024) vs. W-King X10:

Beats Pill (2024) is more premium and stylish but lacks some features found in the W-King X10, which offers powerful sound and long battery life at a lower price. The W-King X10 may appeal to users seeking value and durability but is heavier and lacks advanced app controls.

7.Beats Pill (2024) vs. 1More ComfoBuds Mini:

Beats Pill (2024) is a portable speaker with impressive design and sound quality, while the 1More ComfoBuds Mini are compact earbuds with effective ANC and comfort. The comparison here highlights different use cases: the Beats Pill for speaker needs and the ComfoBuds Mini for earbuds with noise cancellation.

### 8.3 SWOT Analysis
Conduct a SWOT analysis (Strengths, Weaknesses, Opportunities, Threats) for Beats by Dre based on the comparative data.

Beats by Dre:

Strengths:

Sound Quality: Highly praised for its rich, balanced sound with punchy bass.
Design: Premium aesthetics and high-quality build.
Battery Life: Impressive longevity with up to 24 hours of playtime.
Integration: Seamless integration with Apple devices.

Weaknesses:

Lack of App Control: No dedicated app for customization and control settings.
Durability: Compared to competitors like JBL and Bose, it may not be as rugged for outdoor use.
Price: Higher price point relative to some competitors, which may affect affordability.

Opportunities:

Feature Enhancement: Introduce app control for customization to enhance user experience.
Competitive Pricing: Consider adjustments in pricing or bundling options to improve competitiveness.

Threats:

Intense Competition: Strong competition from brands like JBL, Bose, and Anker, which offer features such as app control, durability, and affordability.
Customer Expectations: Rising customer expectations for features and durability that may challenge Beats’ market position.

## 9. Strategic Recommendations

### 9.1 Product Improvements
Based on the analysis, suggest specific product improvements.

9.1 Product Improvements

#Beats by Dre:

a)App Integration:

Action: Develop a dedicated app for Beats products to allow users to customize settings, update firmware, and access enhanced features like EQ settings.
Benefit: Enhances user control and personalization, aligning with competitors who offer advanced app support.

b)Durability Enhancements:

Action: Improve the ruggedness of the product to better withstand outdoor use, similar to competitors like JBL and Bose.
Benefit: Expands appeal to users who value durability and are likely to use the product in various environments.

c)Price Adjustments:

Action: Evaluate pricing strategies to offer competitive pricing or value bundles.
Benefit: Can attract price-sensitive customers and offer better value compared to more expensive competitors.

d)Additional Features:

Action: Incorporate features such as multi-device pairing and improved connectivity stability.
Benefit: Addresses common complaints and enhances overall user experience.

e)User Feedback Integration:

Action: Implement a robust system for collecting and addressing user feedback to continuously improve product offerings.
Benefit: Helps in identifying and resolving issues based on actual user experiences.

#Bose:

a)Connectivity Improvements:

Action: Enhance Bluetooth pairing and connectivity features to reduce frustration.
Benefit: Addresses a major area of customer dissatisfaction.

b)Battery Life Enhancement:

Action: Work on improving the battery life of products to address common complaints.
Benefit: Increases user satisfaction and reduces the frequency of charging.

c)Quality Control:

Action: Improve quality control processes to ensure consistent product performance.
Benefit: Reduces product failures and enhances overall reliability.

#JBL:

a)Build Quality:

Action: Continue to focus on the durable construction while exploring lighter designs.
Benefit: Balances durability with portability, addressing user feedback on weight.

b)App Features:

Action: Enhance app functionality to include more features and customizations.
Benefit: Competes with brands offering more app-based controls.

#Sony:

a)Connectivity and Reliability:

Action: Address common connectivity issues and improve product reliability.
Benefit: Reduces user frustration and enhances brand reputation.

b)Noise Cancellation:

Action: Invest in improving noise cancellation technology.
Benefit: Meets customer expectations for high-performance noise cancellation.

c)Customer Service:

Action: Enhance customer service and support, focusing on responsiveness and effectiveness.
Benefit: Improves overall customer satisfaction and brand loyalty.

#Sennheiser:

a)Reliability Enhancements:

Action: Improve product durability and reliability to address hardware failure issues.
Benefit: Increases user trust and satisfaction.

b)Customer Support:

Action: Enhance customer service to handle returns and support more effectively.
Benefit: Improves user experience and resolves issues more efficiently.

#Skullcandy:

a)Quality Improvement:

Action: Focus on enhancing performance and build quality to address reliability issues.
Benefit: Reduces user complaints and increases satisfaction.

b)Customer Service:

Action: Improve customer service practices and response times.
Benefit: Enhances user experience and brand perception.

#JLab:

a)Build Quality:

Action: Enhance the durability of charging cables and overall build.
Benefit: Reduces user complaints about product longevity.

b)Connectivity Issues:

Action: Address Bluetooth connectivity issues to improve user experience.
Benefit: Ensures a more reliable and seamless connection.

#Beats Studio:

a)Charging Accessories:

Action: Address minor issues such as the short charging cable.
Benefit: Enhances user convenience and overall satisfaction.

b)Design Adjustments:

Action: Make minor design tweaks to address issues with the removal of earbuds from the case.
Benefit: Improves ease of use while maintaining overall satisfaction.

### 9.2 Marketing Strategies
Provide recommendations for marketing strategies that could enhance consumer perception and satisfaction.

#Beats by Dre:

1.Highlight Unique Selling Points:

Action: Focus marketing campaigns on the distinctive features of Beats products, such as sound quality, design, and brand image.
Benefit: Reinforces the brand's strengths and differentiates it from competitors.

2.Leverage Influencer Partnerships:

Action: Collaborate with influencers and celebrities to promote Beats products through social media and other platforms.
Benefit: Increases brand visibility and credibility, reaching a wider and more engaged audience.

3.Enhance Digital Presence:

Action: Invest in targeted online advertising, including social media ads and search engine marketing.
Benefit: Attracts potential customers and increases brand awareness.

4.User-Generated Content:

Action: Encourage customers to share their experiences and reviews through social media and brand campaigns.
Benefit: Builds community engagement and leverages positive user experiences to attract new customers.

5.Create Engaging Content:

Action: Develop content that showcases product features, benefits, and user testimonials through videos, blogs, and interactive content.
Benefit: Educates potential customers and enhances their perception of the brand.

6.Offer Limited-Time Promotions:

Action: Implement time-sensitive discounts, bundles, or exclusive offers to incentivize purchases.
Benefit: Drives sales and creates a sense of urgency among consumers.

#Bose:

1.Address Pain Points Publicly:

Action: Acknowledge and address common issues highlighted in reviews through transparent communication and updates.
Benefit: Builds trust with consumers and demonstrates a commitment to improving product quality.

2.Reinforce Positive Attributes:

Action: Emphasize the strengths of Bose products, such as sound quality and brand reputation, in marketing materials.
Benefit: Helps shift focus away from negative aspects and highlights the value of the products.

3.Customer Loyalty Programs:

Action: Develop loyalty programs that offer rewards, discounts, or exclusive access to new products for repeat customers.
Benefit: Encourages repeat purchases and enhances customer retention.

#JBL:

1.Showcase Product Durability:

Action: Highlight the durability and build quality of JBL products in marketing campaigns.
Benefit: Reinforces the brand’s strength in producing reliable and long-lasting products.

2.Feature Customer Testimonials:

Action: Use positive customer reviews and testimonials in marketing materials to build credibility.
Benefit: Leverages existing positive sentiment to attract new customers.

3.Expand Product Range Awareness:

Action: Increase awareness of the full range of JBL products through targeted advertising and promotions.
Benefit: Ensures consumers are aware of all available options and encourages them to explore beyond a single product.

#Sony:

1.Promote Product Improvements:

Action: Actively market recent product improvements and fixes to address previous issues.
Benefit: Demonstrates the brand’s commitment to resolving past problems and improving customer satisfaction.

2.Emphasize High-End Features:

Action: Highlight advanced features and technology in high-end Sony products through targeted campaigns.
Benefit: Appeals to tech-savvy consumers looking for premium experiences.

3.Strengthen Customer Service Messaging:

Action: Promote enhancements in customer service and support as part of the marketing strategy.
Benefit: Rebuilds consumer trust and addresses past service-related issues.

#Sennheiser:

1.Leverage Sound Quality Reputation:

Action: Emphasize the superior sound quality and audio performance of Sennheiser products in marketing campaigns.
Benefit: Capitalizes on the brand’s strengths and attracts audiophiles.

2.Focus on Reliability Messaging:

Action: Highlight efforts to improve product reliability and durability in marketing materials.
Benefit: Addresses past issues and builds confidence in the brand’s commitment to quality.

#Skullcandy:

1.Highlight Comfort and Design:

Action: Emphasize the comfort, design, and unique style of Skullcandy products in advertising.
Benefit: Appeals to consumers who value aesthetic and comfort in addition to performance.

2.Address Customer Service Concerns:

Action: Implement and promote improvements in customer service and support.
Benefit: Enhances overall brand perception and customer satisfaction.

#JLab:

1.Promote Value for Money:

Action: Emphasize the affordability and value proposition of JLab products.
Benefit: Attracts cost-conscious consumers looking for high-quality products at a lower price point.

2.Highlight Positive Reviews:

Action: Use positive customer reviews to promote JLab products in marketing campaigns.
Benefit: Leverages existing positive sentiment to enhance brand credibility.

#Beats Studio:

1.Showcase Positive User Experiences:

Action: Highlight glowing customer reviews and testimonials in marketing materials.
Benefit: Reinforces the product’s positive reputation and attracts new customers.

2.Address Minor Issues:

Action: Acknowledge and address minor issues mentioned in reviews to show responsiveness and commitment to improvement.
Benefit: Maintains overall positive perception while addressing potential customer concerns.

These strategies aim to enhance consumer perception, address existing issues, and leverage brand strengths to improve overall satisfaction and market position.

### 9.3 Future Research
Suggest areas for future research or additional data that could be collected to further enhance the analysis.

1.Consumer Preferences and Trends:

Action: Conduct surveys and focus groups to gather detailed insights into evolving consumer preferences and trends.
Benefit: Helps in aligning product features with current market demands and expectations.

2.Long-term Product Reliability:

Action: Collect data on long-term product performance and user experiences.
Benefit: Provides insights into reliability issues and helps in improving future product designs.

3.Competitive Benchmarking:

Action: Continuously monitor and analyze competitor products and features.
Benefit: Keeps the brand informed about industry standards and opportunities for differentiation.

4.User Experience Research:

Action: Conduct in-depth research on user experience with different product features and functionalities.
Benefit: Identifies areas for improvement and enhances overall user satisfaction.

5.Impact of Pricing Strategies:

Action: Analyze the impact of various pricing strategies on consumer behavior and sales.
Benefit: Helps in optimizing pricing to balance competitiveness and profitability.

## 10. Conclusion
Summarize the key findings and their implications, and reflect on the overall project and its contribution to understanding consumer sentiment for Beats by Dre.

Summary of Key Findings:


*   Beats by Dre products generally receive positive feedback for their design, sound quality, and overall performance. The predominant emotion expressed is joy, highlighting user satisfaction with the product's features and aesthetics.

*   JBL, JLab, and Beats Studio are favorably reviewed for their sound quality, battery life, and value for money, with joy being the predominant emotion.

*   Bose and Sony face significant challenges with customer dissatisfaction, primarily due to connectivity issues, product failures, and inadequate customer service, resulting in predominant emotions of disappointment.


Implications:

*  The analysis indicates that Beats by Dre's focus on design and sound quality aligns well with user preferences. However, there is an opportunity to enhance product features, durability, and integration with app-based controls to address competition and emerging market needs.

*   Competitors like Bose, Sony, and Sennheiser should address specific reliability and customer service issues to improve their overall market position.

Contribution to Understanding Consumer Sentiment:

*   This project provides a comprehensive overview of consumer sentiment towards Beats by Dre and its competitors, offering valuable insights into areas of strength and opportunities for improvement.

*   The comparative analysis and strategic recommendations aim to guide product development and marketing strategies, enhancing the brand's position in the competitive landscape and meeting evolving consumer expectations.

## 11. References
List all the sources, tools, and references used in the project.

Sources:

Consumer Reviews:

Collected from online review platforms such as Amazon, Best Buy, and retailer websites where Beats by Dre and competitor products are sold.
Product Specifications:

Market Research Reports:

Industry reports and market analysis documents related to consumer electronics and audio products.

Customer Feedback Studies:

Previous studies and surveys related to consumer satisfaction with audio products.

Tools:

Data Collection:

Oxylabs API: Used for collecting product review data from various online sources.
Web Scraping Tools: Employed for extracting reviews and product information.

Data Cleaning and Analysis:

Google Colab: Used for data processing, cleaning, and analysis.
Pandas and NumPy: Libraries utilized for data manipulation and cleaning.
Matplotlib and Seaborn: Used for data visualization and creating charts.
Sentiment Analysis:

Gemini API: Applied for performing sentiment analysis on collected review data.

Statistical Analysis:

Excel: For saving data.

References:

Product Information and Reviews:

1)beats:https://www.amazon.ca/Beats-Pill-Compatible-Built-Microphone/dp/B0D4SX9RC6/ref=asc_df_B0D4SX9RC6/?tag=googleshopc0c-20&linkCode=df0&hvadid=697549805454&hvpos=&hvnetw=g&hvrand=8863013040614853286&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9197976&hvtargid=pla-2321785258761&psc=1&mcid=21669cb5597a313bb75e2b4bafa264e8&gad_source=1

2)jbl charge 4: https://www.amazon.com/JBL-Portable-Waterproof-Wireless-Bluetooth/dp/B07GWRCZQP/ref=sr_1_4?crid=1JALTW9ASPB72&dib=eyJ2IjoiMSJ9.9UbwgeIiUXoR7zL9k9YjE7XSTWbQkWLR4BqkqoD8R-CfdL6QRqppyA5vMy9ePWOPR9yQKMD6JgN2b3qfMuSd_8Phj73xq3afa_ILvervVL4eYVta5fojMPeRpREJOSQfesv8o__-a_SZQ7WmqwfQ8D0KWRFEyOzxnkWWDJmLeArkNPAPQI937cr6Z2ySirlHLyitNr5dGKq12O39HHdLNyg_6-u1I6XR1GOsm_SEwR4.iFsMp2vKEOHySmunOvcwxC51VRT-TakflVdVro3fa14&dib_tag=se&keywords=jbl%2Bpills%2Bspeaker&qid=1723401851&sprefix=jbl%2Bpills%2Bspeaker%2Caps%2C491&sr=8-4&th=1

3)jbl charge 5: https://www.amazon.com/JBL-CHARGE-Portable-Bluetooth-Waterproof/dp/B08X4YMTPM/ref=sr_1_6?crid=1JALTW9ASPB72&dib=eyJ2IjoiMSJ9.9UbwgeIiUXoR7zL9k9YjE7XSTWbQkWLR4BqkqoD8R-CfdL6QRqppyA5vMy9ePWOPR9yQKMD6JgN2b3qfMuSd_8Phj73xq3afa_ILvervVL4eYVta5fojMPeRpREJOSQfesv8o__-a_SZQ7WmqwfQ8D0KWRFEyOzxnkWWDJmLeArkNPAPQI937cr6Z2ySirlHLyitNr5dGKq12O39HHdLNyg_6-u1I6XR1GOsm_SEwR4.iFsMp2vKEOHySmunOvcwxC51VRT-TakflVdVro3fa14&dib_tag=se&keywords=jbl%2Bpills%2Bspeaker&qid=1723401851&sprefix=jbl%2Bpills%2Bspeaker%2Caps%2C491&sr=8-6&th=1

4) Bose: https://www.amazon.com/Bose-SoundLink-Micro-Bluetooth-Speaker/dp/B09R8LRZZQ/ref=cm_cr_arp_d_product_top?ie=UTF8

5)https://www.amazon.ca/Edifier-R1280T-Bookshelf-Speakers-Monitors/dp/B016P9HJIA/ref=sr_1_2_sspa?crid=223BPEED4LW63&dib=eyJ2IjoiMSJ9.EG9pIwZQHNorubOC7iXDw5eQlHEdgJ1j_HO4V6BTTDFa07-nIPmVpI-pvDW8-iF__4mOdg6kaaNS86x8OFLFzYIawqeT15Yrt-_npk5ZQ6_rxgvy_gFTbXQkrDQmFHZXg5TYualNwYgJys98YtQso6edTSDGGOl8pdIubv7lydCAzhmAdqzxPgV_xythugx8zLx8lrq0vugdtpFqy8FpIvrpSXNvVaB6U0MhtdcI6RPBn2zqy4mRcfOBoQlUV-qXyjPXDVdVLKflIv_Gq2ReXU2TdabNOeoz_fgn1nsoAM0.ZL3U-bchVZSDdB2b51fLZ03VvjnAW7LnD1w5-SDib5Q&dib_tag=se&keywords=edifier+speaker&qid=1723404382&sprefix=edifier+%2Caps%2C272&sr=8-2-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1
Edifier R1280T Powered Bookshelf Speakers - 2.0 Stereo Active Near Field Monitors - Studio Monitor Speaker - Wooden Enclosure - 42 Watts RMS
6)https://www.amazon.ca/dp/B07ZNT7PRL/ref=sspa_dk_detail_0?psc=1&pd_rd_i=B07ZNT7PRL&pd_rd_w=wcQhN&content-id=amzn1.sym.516c2169-755e-413a-a38a-68230f4ab66f&pf_rd_p=516c2169-755e-413a-a38a-68230f4ab66f&pf_rd_r=KXPCJNEBCG063C613H2F&pd_rd_wg=cCe3i&pd_rd_r=fecf5ad4-bb0b-4403-bb80-18b076fd72f8&s=wireless&sp_csd=d2lkZ2V0TmFtZT1zcF9kZXRhaWw
Anker PowerConf Speakerphone, Zoom Certified Conference Speaker with 6 Mics, 360° Enhanced Voice Pickup, 24H Call Time, Bluetooth 5.3, USB C, Compatible with Leading Platforms for Personal Workspaces (2 times)
7)https://www.amazon.ca/Bluetooth-W-KING-Portable-Wireless-Waterproof/dp/B08XYY43ZF/ref=sr_1_2_sspa?crid=35BR6KC25XJLW&dib=eyJ2IjoiMSJ9.2b7svEmqYd5WYUrTVgdFVuq2ohDO2Sy7VajIF2C-aRgIOJnuMfcb4kIALU3C2__kl-UZUmQJ7TlPqlqM7joluq4vG05Q2pYTFUtAgT0ByckfzUVbcx8yWdQVYLJrtOrs1FEkoMP7gIGfRHONcagyYfhaor16A3CsgIp3G0RiNqLJUVmy7RZT_-tNLtVnbMbguXW8yuqXfkbGmAMlPpBB_t-vGtF1eHBYFQA9J_1sVA7fZMw55VqmFSd_UbzArsefkSlsGiFEWGJmR9rLk7TEdhlFiH7AQqdezJYAaAkH_S0.qSa7t9duqAMm6436bIObvdgNMUc1VytMimzaOpORaQM&dib_tag=se&keywords=w+king+bluetooth+speaker&qid=1723532892&s=electronics&sprefix=W+king%2Celectronics%2C281&sr=1-2-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1
W-KING (120W Peak)70W Bluetooth Speaker, Loud Portable Waterproof Outdoor Haut Parleur Speaker Wireless Boombox for Party, Triple Passive Radiators-Deep Bass/Hi-Fi/DSP/42H/Power Bank/TF/AUX/EQ/Opener
8)https://www.amazon.ca/soundcore-Subwoofer-Waterproof-Floatable-Bluetooth/dp/B0CQ53RVTW/ref=sr_1_1_sspa?crid=1D2DAXS8IPYX1&dib=eyJ2IjoiMSJ9.OWWSwmTGRJCqizc2cUwKMTm4fD4TZSFBtSq203ugvmF3CGRoyBWpKLOs0EJDyL4aOYgX0HUXFiyG8qq9oWULYJMU8wSMmqqE0juRvlKYlAmJyQp-yQT1QyBJnao6yn_1iZOKEkS_zk5oJz-DOUzudxAIi9y2380fDQotAZH60m5hB4Dm83Z0BIa1Cz4ynNXYi1MEt4bRZ_j8lgqHaiBEIvbudMCdE-pc-Aw854p2IeCKZwbRIbXHEaGQ5T8CqXniWmjjsC7DVmYyQ2pDPzcZt9crjO-C2QNsTResu4Izntg.CZytZs75HVjRbnF2EMEfDtjoq5efAutIpDaik21GvBs&dib_tag=se&keywords=best%2Bspeaker%2BUSA&qid=1723536540&refinements=p_36%3A10000-&rnid=12035759011&s=electronics&sprefix=best%2Bspeaker%2Busa%2Celectronics%2C289&sr=1-1-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&th=1
soundcore Boom 2 Outdoor Speaker, 80W, Subwoofer, BassUp 2.0, 24H Playtime, IPX7 Waterproof, Floatable, RGB Lights, USB-C, Custom EQ, Bluetooth 5.3, Portable For Outdoors, Camping, Beach, and Backyard

Beats by Dre Official Website: https://www.beatsbydre.com
Story of Beats by Dre: https://www.highsnobiety.com/p/beats-dr-dre-brand-history/
Bose Official Website: https://www.bose.com
JBL Official Website: https://www.jbl.com
Sony Official Website: https://www.sony.com
Sennheiser Official Website: https://www.sennheiser.com
Skullcandy Official Website: https://www.skullcandy.com
JLab Official Website: https://www.jlabaudio.com

About Python: https://youtu.be/Y8Tko2YC5hA
Tuple: https://realpython.com/python-tuple/
Sentiment Analysis: https://youtu.be/5HQCNAsSO-s
NLTK'S Sentiment Intensity Analyzer:https://www.nltk.org/howto/sentiment.html

EDA:

FacetGrid: https://www.example.com/
Violin Plot: https://www.example.com/

Market Research:

Statista, Market Research Reports: https://www.statista.com
IBISWorld, Industry Reports: https://www.ibisworld.com

The Power of Meaningful Networking: https://youtu.be/-30m8D6gTrg

Data Collection and Analysis Tools Documentation:

Google Colab Documentation: https://colab.research.google.com
Pandas Documentation: https://pandas.pydata.org/docs/
NumPy Documentation: https://numpy.org/doc/
Matplotlib Documentation: https://matplotlib.org/stable/contents.html
Seaborn Documentation: https://seaborn.pydata.org/
Gemini API Documentation: https://gemini.ai/docs/
About Gemini AI: https://youtu.be/_TVnM9dmUSk
Google Gemini Ultra: https://gemini.google.com/app
Large Language Models (LLMs): https://youtu.be/5sLYAQS9sWQ
Gemini AI API Key: https://www.loom.com/share/a8dd9cfca3014f128916b60bb3f446c0?sid=d21164fd-3e55-4b0c-9cac-17055cc3394c
Perfect ChatGpt Prompt Formula: https://youtu.be/jC4v5AS4RIM
Better Prompt Ideas: https://www.youtube.com/watch?v=o64Mv-ArFDI

Customer Feedback Studies:

Relevant academic and industry papers on customer feedback and sentiment analysis.
"""

